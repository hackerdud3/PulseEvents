name: Build and Deploy to Google Kubernetes Engine

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: pulse-events-cluster
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: pulse-backend-deployment
  IMAGE: pulse-backend-image
  REPOSITORY: gcr.io

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests

      - id: "auth"
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker
        run: |
          gcloud --quiet auth configure-docker

      - name: Get GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build Docker Image
        env:
          SPRING_DATA_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SPRING_DATA_MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            ./backend

      - name: Push docker image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=$gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
