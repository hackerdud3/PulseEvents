name: Build and Deploy to GKE

on:
  push:
    branches:
      - Deployment

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: pulse-events-cluster # Cluster name
  GKE_ZONE: us-central1 # Cluster zone
  DEPLOYMENT_NAME: pulse-backend-server # Deployment name
  IMAGE: pulse-events-image

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - uses: "actions/checkout@v4"

      - id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      - run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_ZONE" --project "$PROJECT_ID"

      # Create Kubernetes Secret
      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic pulse-backend-secrets \
            --from-literal=SPRING_DATA_MONGODB_URI=${{ secrets.MONGODB_URI }} \
            --from-literal=SPRING_DATA_MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }} \
            --from-literal=JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --from-literal=JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}

      # Build the Docker image
      - name: Build docker image
        run: |
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            ./backend

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          ./kustomize edit set image gcr.io/${{ secrets.GKE_PROJECT }}/${{ env.IMAGE }}:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
